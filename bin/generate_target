#!/usr/bin/env python

import os
import sys
from os.path import dirname, abspath, join, basename

import argparse

parser = argparse.ArgumentParser(description='Annotate a tomogram.')
parser.add_argument('-p', action='store', dest='path_params', help = 'path to params file')
args = parser.parse_args()

if args.path_params == None: # if no args are passed, then open GUI

    # Set deepfindHome to the location of this file
    deepfindHome = dirname(abspath(__file__))
    deepfindHome = os.path.split(deepfindHome)[0]+'/'

    gui_folder = 'pyqt/generate_target/'
    gui_script = 'gui_target.py'

    cmd = 'cd '+deepfindHome+gui_folder+' ; python '+gui_script

    os.system(cmd)

else
    params = load_params(args.path_params)

    objl = ol.read_xml(params.path_objl)

    # Initialize target generation task:
    tbuild = TargetBuilder()

    if params.initialize==True:
        tbuild.display('Loading initial volume ...')
        vol_initial = cm.read_array(params.path_initial_vol)
    else:
        vol_initial = np.zeros((params.dim_z, params.dim_y, params.dim_x))

    if params.strategy == 'Shapes':
        target = tbuild.generate_with_shapes(objl, vol_initial, params.mask_list)
    else:
        target = tbuild.generate_with_spheres(objl, vol_initial, params.radius_list)

    cm.write_array(target, params.path_target)